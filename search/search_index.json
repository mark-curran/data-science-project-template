{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Data Science Project Template Welcome the documentation site for the Data Science Project Template, a codebase that builds containers appropriate for data science projects. Project Status This project is being actively built, and though the core functionality is complete the documentation is not in a state where it can be readily used. Further Information Quickstart and Installation The Quickstart section section describes how to initialize the template and setup a local development environment. Template Design Information on the template design can be found in the Design section . This section describes the design decisions behind the template, and describes the structure of the code. Reference The Reference section describes how the various features of the template can be used in different scenarios. Further Reading Additional information and links to the technologies used in the project can be found in the Further Reading section . Distribution See the About section for further information on distribution and reuse.","title":"Home"},{"location":"#data-science-project-template","text":"Welcome the documentation site for the Data Science Project Template, a codebase that builds containers appropriate for data science projects.","title":"Data Science Project Template"},{"location":"#project-status","text":"This project is being actively built, and though the core functionality is complete the documentation is not in a state where it can be readily used.","title":"Project Status"},{"location":"#further-information","text":"","title":"Further Information"},{"location":"#quickstart-and-installation","text":"The Quickstart section section describes how to initialize the template and setup a local development environment.","title":"Quickstart and Installation"},{"location":"#template-design","text":"Information on the template design can be found in the Design section . This section describes the design decisions behind the template, and describes the structure of the code.","title":"Template Design"},{"location":"#reference","text":"The Reference section describes how the various features of the template can be used in different scenarios.","title":"Reference"},{"location":"#further-reading","text":"Additional information and links to the technologies used in the project can be found in the Further Reading section .","title":"Further Reading"},{"location":"#distribution","text":"See the About section for further information on distribution and reuse.","title":"Distribution"},{"location":"about/about/","text":"About This page contains information about the Data Science Project Template. Author This project was started by Mark Curran , and any issues can be submitted using the github issues system. License This project can be distributed under GNU GENERAL PUBLIC LICENSE Version 3. A link to the full license can be found here .","title":"About"},{"location":"about/about/#about","text":"This page contains information about the Data Science Project Template.","title":"About"},{"location":"about/about/#author","text":"This project was started by Mark Curran , and any issues can be submitted using the github issues system.","title":"Author"},{"location":"about/about/#license","text":"This project can be distributed under GNU GENERAL PUBLIC LICENSE Version 3. A link to the full license can be found here .","title":"License"},{"location":"design/design/","text":"Project Design This page describes the project design.","title":"Project Design"},{"location":"design/design/#project-design","text":"This page describes the project design.","title":"Project Design"},{"location":"further_reading/further_reading/","text":"Further Reading Some further reading material.","title":"Further Reading"},{"location":"further_reading/further_reading/#further-reading","text":"Some further reading material.","title":"Further Reading"},{"location":"quickstart/quickstart/","text":"Quickstart This page describes how to set up the Data Science Project Template for local development. This project template is in effect a hierarchy of configs that build containers based on the environment data science is being conducted in. At the bottom of that hierarchy is the local container that runs on a users local machine. This guide describes creating and developing inside the local container. Required Software You will need the following applications installed on your local machine. Docker Docker is the application that will run the local container. To install Docker desktop on a Windows or Mac please to the official site . There are alternatives such as podman , though the project has not been tested on this engine. For Windows Users: Windows Subsystem for Linux If you are using a Windows machine, then you must additionally install Windows Subsystem for Linux . Instructions on how to enable WSL with Docker on a windows machine can be found in the official documentation . Optional: Visual Studio Code Once you have installed Docker, it is highly recommended to install vscode . The config for the local container is structured according to the devcontainer specification , and vscode has an extension ( Remote - Containers ) that is compatible with this spec. Once vscode is installed, install the \"Remote - Containers\" extension as per the instructions here . If you are familiar with Docker and are happy to run the container from the command line, then vscode is not necessary. Optional: Installing Docker into a Linux Subsystem At the time of writing (September 2022), Docker desktop is only available as free software for personal projects and organizations below a certain size. However, the docker engine can be freely installed on any linux machine. To install the docker engine on a linux machine refer to the official documentation which explains how to install the docker engine on various distros, e.g., Ubuntu . If you are running Windows or Mac and your organisation does not a license to use Docker desktop, you can still run the docker engine from within a virtual machine. Docker Desktop pricing . Running the docker engine in WSL . Running the docker engine on MacOS, both arm64 and x86 chips . Building a Local Development Container Persisting Command Line History The main branch of the Data Science Project Template repository contains all the files you will need to start developing locally, bar one. When developing inside the container, your bash history is kept in the file \"/root/.bash_history\" (by default the container runs as the root user, this page explains some of the limitations of this approach). To prevent your history being destroyed when you rebuilt the container, this file is persisted to the file \".devcontainer/.bash_history\" on the local machine. By default this file is part of the \".gitignore\", and as such is not present in the main branch. If you would like to persist command line history between sessions, create an empty file \".devcontainer/.bash_history\" before proceeding to build the container for the first time. If you don't want your caommand line history to be preserved, then comment out this line in the docker-compose.yml file. Building and Running the Container To build and connect to the container, open vscode and open the root folder of the Data Science Project Template repo. Make sure Docker Desktop is running. If the Remote - Containers extension is installed correctly, then you should be able to build the container by bringing up the command palette and entering the command Remote-Containers: Rebuild Container . Optional: Storing code inside WSL If you are using WSL then it is recommended that you further store your code in WSL 2 filesystem .","title":"Quickstart"},{"location":"quickstart/quickstart/#quickstart","text":"This page describes how to set up the Data Science Project Template for local development. This project template is in effect a hierarchy of configs that build containers based on the environment data science is being conducted in. At the bottom of that hierarchy is the local container that runs on a users local machine. This guide describes creating and developing inside the local container.","title":"Quickstart"},{"location":"quickstart/quickstart/#required-software","text":"You will need the following applications installed on your local machine.","title":"Required Software"},{"location":"quickstart/quickstart/#docker","text":"Docker is the application that will run the local container. To install Docker desktop on a Windows or Mac please to the official site . There are alternatives such as podman , though the project has not been tested on this engine.","title":"Docker"},{"location":"quickstart/quickstart/#for-windows-users-windows-subsystem-for-linux","text":"If you are using a Windows machine, then you must additionally install Windows Subsystem for Linux . Instructions on how to enable WSL with Docker on a windows machine can be found in the official documentation .","title":"For Windows Users: Windows Subsystem for Linux"},{"location":"quickstart/quickstart/#optional-visual-studio-code","text":"Once you have installed Docker, it is highly recommended to install vscode . The config for the local container is structured according to the devcontainer specification , and vscode has an extension ( Remote - Containers ) that is compatible with this spec. Once vscode is installed, install the \"Remote - Containers\" extension as per the instructions here . If you are familiar with Docker and are happy to run the container from the command line, then vscode is not necessary.","title":"Optional: Visual Studio Code"},{"location":"quickstart/quickstart/#optional-installing-docker-into-a-linux-subsystem","text":"At the time of writing (September 2022), Docker desktop is only available as free software for personal projects and organizations below a certain size. However, the docker engine can be freely installed on any linux machine. To install the docker engine on a linux machine refer to the official documentation which explains how to install the docker engine on various distros, e.g., Ubuntu . If you are running Windows or Mac and your organisation does not a license to use Docker desktop, you can still run the docker engine from within a virtual machine. Docker Desktop pricing . Running the docker engine in WSL . Running the docker engine on MacOS, both arm64 and x86 chips .","title":"Optional: Installing Docker into a Linux Subsystem"},{"location":"quickstart/quickstart/#building-a-local-development-container","text":"","title":"Building a Local Development Container"},{"location":"quickstart/quickstart/#persisting-command-line-history","text":"The main branch of the Data Science Project Template repository contains all the files you will need to start developing locally, bar one. When developing inside the container, your bash history is kept in the file \"/root/.bash_history\" (by default the container runs as the root user, this page explains some of the limitations of this approach). To prevent your history being destroyed when you rebuilt the container, this file is persisted to the file \".devcontainer/.bash_history\" on the local machine. By default this file is part of the \".gitignore\", and as such is not present in the main branch. If you would like to persist command line history between sessions, create an empty file \".devcontainer/.bash_history\" before proceeding to build the container for the first time. If you don't want your caommand line history to be preserved, then comment out this line in the docker-compose.yml file.","title":"Persisting Command Line History"},{"location":"quickstart/quickstart/#building-and-running-the-container","text":"To build and connect to the container, open vscode and open the root folder of the Data Science Project Template repo. Make sure Docker Desktop is running. If the Remote - Containers extension is installed correctly, then you should be able to build the container by bringing up the command palette and entering the command Remote-Containers: Rebuild Container .","title":"Building and Running the Container"},{"location":"quickstart/quickstart/#optional-storing-code-inside-wsl","text":"If you are using WSL then it is recommended that you further store your code in WSL 2 filesystem .","title":"Optional: Storing code inside WSL"},{"location":"reference/reference/","text":"Reference A full reference on how to use the template.","title":"Reference"},{"location":"reference/reference/#reference","text":"A full reference on how to use the template.","title":"Reference"},{"location":"reference/users_inside_container/","text":"User Permissions Inside a Docker Container This document explains some of the difficulties of using a container as a non-root user. This page is a work in progress. For now please refer to these articles: * https://www.howtogeek.com/devops/why-processes-in-docker-containers-shouldnt-run-as-root/ * https://code.visualstudio.com/remote/advancedcontainers/add-nonroot-user","title":"User Permissions Inside a Docker Container"},{"location":"reference/users_inside_container/#user-permissions-inside-a-docker-container","text":"This document explains some of the difficulties of using a container as a non-root user. This page is a work in progress. For now please refer to these articles: * https://www.howtogeek.com/devops/why-processes-in-docker-containers-shouldnt-run-as-root/ * https://code.visualstudio.com/remote/advancedcontainers/add-nonroot-user","title":"User Permissions Inside a Docker Container"},{"location":"reference/using_mkdocs/","text":"Using mkdocs Note that run mkdocs locally you need to run: 0.0.0.0:8000 and make sure that you are exposing port 8000 (or whichever port you choose) in the docker-compose file.","title":"Using mkdocs"},{"location":"reference/using_mkdocs/#using-mkdocs","text":"Note that run mkdocs locally you need to run: 0.0.0.0:8000 and make sure that you are exposing port 8000 (or whichever port you choose) in the docker-compose file.","title":"Using mkdocs"}]}